/* styles.scss */
@import "_colours.scss";
@import "angled-edges/_angled-edges.scss";


//if you run 'sass --watch src/sass/:public/css/' in the command line
//this will automatically be compiled into CSS in the 'public/css' folder

body {
    font-family: sans-serif;
    text-align: center;
    background: linear-gradient(155deg, $colour-primary 70%, $colour-secondary 70%);
    color: $colour-light;
    min-height: 100vh;
}


//FEATURE #3: MIXINS
//mixins are another SASS feature -- a way of defining reusable stylesheet functions
//it is defined once, can take parameters, can be invoked anywhere in your SASS code
//it can handle vendor prefixing such as '-webkit' prefix for Chrome and Safari 

@mixin transform($value) {
    -webkit-transform: $value;
    -moz-transform: $value;
    -ms-transform: $value;
    transform: $value;
}

.profile-logo {
    font-size: 60px;
    font-family: cursive;
    @include transform ( rotate(25deg));
}

//FEATURE #3.5: MIXINS AND VARIABLES
//we can also use mixin with multiple parameters
//handle styling of various parts of the page
//you can create a mixin that defines foreground and background colour,
//this will enable us to select appearances for different sections 
//from a finite list of style variables
//foreground means text color 
//background means background color

$style1: (foreground: $colour-light,
background: $colour-secondary);

$style2: (foreground: $colour-primary,
background: $colour-highlight1);

$style3: (foreground: $colour-primary,
background: $colour-highlight2);

@mixin content-style( $foreground, $background) {
    color: $foreground;
    background-color: $background;
}

//FEATURE #4: INHERITANCE
//Inheritance is another powerful feature of SASS 
//you will use this feature when you have two different styles for links in your page
//if you want to use common styles across both, rather than copying and pasting CSS
//you can just use the placeholder class--> " % "

%link-shared {
    font-size: 16px;
    margin-left: 10px;
    margin-right: 10px;
    padding: 10px;
    border-radius: 10px;
}


//FEATURE #1: NESTING STYLES
//specify a style for an element that is only applied 
//if that element occurs within a parent element 

.profile-header {
    a {
        @extend %link-shared;
        @include content-style($style1...);
        // font-size: 16px;   //* these are comment out because we have %link-shared and content-style
        // margin-left: 10px;
        // margin-right: 10px;
        // padding: 10px;
        // border-radius: 5px;
        //color: $colour-light;
        //background-color: $colour-secondary;
    }
}

a {
    @extend %link-shared;
    @include content-style($style3...);
}

//FEATURE #2: RESPONSIVE GRID
//using variables to specify breakpoint (see below)
//Nest @media queries within other styles,
//which makes behavior specific to screen size much more readable

$breakpoint: 800px;

.profile-body {
    display: flex;
    align-items: stretch;
    justify-content: space-around;
    margin-top: 32px;
    margin-left: 10vw;
    margin-right: 10vw;
    @media screen and (max-width: $breakpoint) {
        flex-direction: column;
    }
}

.profile-section {
    @include angled-edge("outside bottom", "lower right", $colour-highlight1);
    @include angled-edge("outside top", "upper right", $colour-highlight1);
    @include content-style($style2...);
    background-color: $colour-highlight1;
    color: $colour-primary;
    margin: 120px 16px 120px 16px;
    border-radius: 10px;
    width: 340px;

    .profile-content {
        padding: 20px;
    }

    @media screen and (max-width: $breakpoint) {
        width: 100%;
    }
}











